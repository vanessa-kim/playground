{"version":3,"sources":["api.ts","atoms.ts","routes/Price.tsx","routes/Chart.tsx","routes/Coin.tsx","routes/Coins.tsx","components/GlobalHeader.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","res","json","fetchCoinHistory","coinId","endDate","Math","floor","Date","now","startDate","isDarkAtom","atom","key","default","isRootAtom","Price","useQuery","isLoading","priceData","data","isDark","useRecoilValue","type","series","map","price","x","time_open","split","y","open","toFixed","high","low","close","options","theme","mode","chart","height","width","toolbar","show","background","grid","plotOptions","candlestick","colors","upward","downward","wick","useFillColor","stroke","Chart","name","curve","yaxis","xaxis","labels","axisTicks","axisBorder","categories","time_close","fill","gradient","gradientToColors","stops","tooltip","formatter","value","Container","styled","div","Header","header","Title","h1","props","accentColor","Loader","span","Overview","headerBtnAccent","OverviewItem","Description","p","Tabs","Tab","textColor","isActive","Coin","useParams","state","useLocation","chartMatch","useRouteMatch","priceMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","loading","useSetRecoilState","setRootAtom","rank","symbol","quotes","USD","description","total_supply","max_supply","to","path","CoinsList","ul","li","cardColor","cardBorderColor","Img","img","Coins","slice","coin","pathname","id","src","toLowerCase","headerColor","ThemeBtn","button","headerBtnBg","headerBtnShadow","BackBtn","GlobalHeader","isRoot","setDarkAtom","onClick","prev","Router","darkTheme","bgColor","lightTheme","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.520bef03.chunk.js","sourcesContent":["const BASE_URL = 'https://api.coinpaprika.com/v1';\r\n\r\nexport function fetchCoins() {\r\n  return fetch(`${BASE_URL}/coins`).then(res => res.json());\r\n}\r\n\r\nexport function fetchCoinInfo(coinId: string) {\r\n  return fetch(`${BASE_URL}/coins/${coinId}`).then(res => res.json());\r\n}\r\n\r\nexport function fetchCoinTickers(coinId: string) {\r\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then(res => res.json());\r\n}\r\n\r\nexport function fetchCoinHistory(coinId: string) {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\r\n  return fetch(`${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`).then(res => res.json());\r\n}","import { atom } from \"recoil\";\r\n\r\nexport const isDarkAtom = atom({\r\n  key: 'isDark',\r\n  default: true,\r\n});\r\n\r\nexport const isRootAtom = atom({\r\n  key: 'isRoot',\r\n  default: false,\r\n});","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from '../api';\r\nimport ApexChart from 'react-apexcharts';\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { isDarkAtom } from \"../atoms\";\r\ninterface priceProps {\r\n  coinId: string;\r\n}\r\ninterface IHistorical {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume:number;\r\n  market_cap: number;\r\n}\r\n\r\nfunction Price({ coinId }: priceProps) {\r\n  const {isLoading, data: priceData} = useQuery<IHistorical[]>(['price', coinId], () => fetchCoinHistory(coinId));\r\n  const isDark = useRecoilValue(isDarkAtom);\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? \"loading price chart...\" : (\r\n        <div>\r\n          <ApexChart\r\n            type=\"candlestick\"\r\n            series={[{\r\n              data: priceData?.map(price => ({\r\n                x: price.time_open.split('T')[0],\r\n                y: [price.open.toFixed(0), price.high.toFixed(0), price.low.toFixed(0), price.close.toFixed(0)],\r\n              }))\r\n            }]}\r\n            options={{\r\n              theme: {\r\n                mode: isDark ? 'dark' : 'light',\r\n              },\r\n              chart: {\r\n                type: 'candlestick',\r\n                height: 300,\r\n                width: 500,\r\n                toolbar: {\r\n                  show: false,\r\n                },\r\n                background: 'transparent',\r\n              },\r\n              grid: {\r\n                show: false,\r\n              },\r\n              plotOptions: {\r\n                candlestick: {\r\n                  colors: {\r\n                    upward: '#00a8ff',\r\n                    downward: '#ff4154'\r\n                  },              \r\n                  wick: {\r\n                    useFillColor: true,\r\n                  }\r\n                }\r\n              },\r\n              stroke: {\r\n                colors: ['pink', 'purple']\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Price;","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from '../api';\r\nimport ApexChart from 'react-apexcharts';\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { isDarkAtom } from \"../atoms\";\r\n\r\ninterface ChartProps {\r\n  coinId: string;\r\n}\r\n\r\ninterface IHistorical {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume:number;\r\n  market_cap: number;\r\n}\r\n\r\nfunction Chart({ coinId }: ChartProps) {\r\n  const {isLoading, data} = useQuery<IHistorical[]>(['ohlcv', coinId], () => fetchCoinHistory(coinId));\r\n  const isDark = useRecoilValue(isDarkAtom);\r\n  \r\n  return <div>{ isLoading ? \"loading chart...\" : (\r\n    <ApexChart \r\n      type=\"line\"\r\n      series={[\r\n        {\r\n          name: 'price',\r\n          data: data?.map(price => price.close),\r\n        },\r\n      ]}\r\n      options={{\r\n        theme: {\r\n          mode: isDark ? 'dark' : 'light',\r\n        },\r\n        chart: {\r\n          height: 300,\r\n          width: 500,\r\n          toolbar: {\r\n            show: false,\r\n          },\r\n          background: 'transparent',\r\n        },\r\n        grid: {\r\n          show: false,\r\n        },\r\n        stroke: {\r\n          curve: 'smooth',\r\n          width: 2,\r\n        },\r\n        yaxis: {\r\n          show: false,\r\n        },\r\n        xaxis: {\r\n          labels: { show: false },\r\n          axisTicks: { show: false },\r\n          axisBorder: { show: false },\r\n          categories: data?.map(price => price.time_close),\r\n          type: 'datetime',\r\n        },\r\n        fill: { \r\n          type: 'gradient', \r\n          gradient: { gradientToColors: ['#1abc9c'], stops: [0, 100]},\r\n        },\r\n        colors: ['#3498db'],\r\n        tooltip: {\r\n          y: {\r\n            formatter: (value) => `$ ${value.toFixed(3)}`,\r\n          },\r\n        },\r\n      }}\r\n    />\r\n  )}</div>;\r\n}\r\n\r\nexport default Chart;","import { useParams, useLocation, Switch, Route, useRouteMatch } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport Price from './Price';\r\nimport Chart from './Chart';\r\nimport { useQuery } from 'react-query';\r\nimport { fetchCoinInfo, fetchCoinTickers } from '../api';\r\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\r\nimport { useSetRecoilState } from 'recoil';\r\nimport { isRootAtom } from '../atoms';\r\n\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color:${ props => props.theme.accentColor }\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: ${props => props.theme.headerBtnAccent};\r\n  background-color: ${props => props.theme.headerBtnAccent};\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst Description = styled.p`\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: transparent;\r\n  border: 1px solid ${props => props.theme.textColor};\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  color: ${(props) =>\r\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\ninterface RouterParams {\r\n  coinId: string;\r\n}\r\ninterface RouteState {\r\n  name: string;\r\n}\r\n\r\ninterface infoData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\n\r\ninterface priceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\nfunction Coin() {\r\n  const { coinId } = useParams<RouterParams>();\r\n  const { state } = useLocation<RouteState>();\r\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\r\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\r\n\r\n  const {isLoading: infoLoading, data: infoData} = useQuery<infoData>([\"info\", coinId], () => fetchCoinInfo(coinId));\r\n  const {isLoading: tickersLoading, data: tickersData} = useQuery<priceData>(\r\n    [\"tickers\", coinId], \r\n    () => fetchCoinTickers(coinId),\r\n  );\r\n  \r\n  // const [loading, setLoading] = useState(true);\r\n  // const [info, setInfo] = useState<infoData>();\r\n  // const [priceInfo, setPriceInfo] = useState<priceData>();\r\n  // useEffect(()=>{\r\n  //   (async() => {\r\n  //     const infoData = await (\r\n  //       await fetch(`https://api.coinpaprika.com/v1/coins/${coinId}`)\r\n  //     ).json();\r\n  //     const priceData = await (\r\n  //       await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)\r\n  //     ).json();\r\n  //     setInfo(infoData);\r\n  //     setPriceInfo(priceData);\r\n  //     setLoading(false);\r\n  //   })();\r\n  // }, [coinId]);\r\n  const loading = infoLoading || tickersLoading;\r\n\r\n  const setRootAtom = useSetRecoilState(isRootAtom);\r\n  setRootAtom(false);\r\n  return (\r\n  <>\r\n    <Container>\r\n      <HelmetProvider>\r\n        <Helmet>\r\n          <title>\r\n            {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n          </title>\r\n        </Helmet>\r\n      </HelmetProvider>\r\n      <Header>\r\n        <Title>{state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}</Title>\r\n      </Header>\r\n      { loading ? (\r\n        <Loader>...Loading</Loader>\r\n        ) : (\r\n          <>\r\n            <Overview>\r\n              <OverviewItem>\r\n                <span>Rank:</span>\r\n                <span>{infoData?.rank}</span>\r\n              </OverviewItem>\r\n              <OverviewItem>\r\n                <span>Symbol:</span>\r\n                <span>${infoData?.symbol}</span>\r\n              </OverviewItem>\r\n              <OverviewItem>\r\n                <span>Price:</span>\r\n                <span>{tickersData?.quotes?.USD?.price || 0}</span>\r\n              </OverviewItem>\r\n            </Overview>\r\n            <Description>{infoData?.description}</Description>\r\n            <Overview>\r\n              <OverviewItem>\r\n                <span>Total Suply:</span>\r\n                <span>{tickersData?.total_supply}</span>\r\n              </OverviewItem>\r\n              <OverviewItem>\r\n                <span>Max Supply:</span>\r\n                <span>{tickersData?.max_supply}</span>\r\n              </OverviewItem>\r\n            </Overview>\r\n            \r\n            <Tabs>\r\n              <Tab isActive={chartMatch !== null}>\r\n                <Link to={`/${coinId}/chart`}>\r\n                  Chart\r\n                </Link>\r\n              </Tab>\r\n              <Tab isActive={priceMatch !== null}>\r\n                <Link to={`/${coinId}/price`}>\r\n                  Price\r\n                </Link>\r\n              </Tab>\r\n            </Tabs>\r\n            \r\n            <Switch>\r\n              <Route path={`/${coinId}/price`}>\r\n                <Price coinId={coinId}/>\r\n              </Route>\r\n              <Route path={`/${coinId}/chart`}>\r\n                <Chart coinId={coinId} />\r\n              </Route>\r\n            </Switch>\r\n          </>\r\n        )\r\n      }\r\n    </Container>\r\n  </>);\r\n}\r\n\r\nexport default Coin;","import { useQuery } from 'react-query';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { fetchCoins } from '../api';\r\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\r\nimport { useSetRecoilState } from 'recoil';\r\nimport { isRootAtom } from '../atoms';\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst CoinsList = styled.ul``;\r\n\r\nconst Coin = styled.li`\r\n  background-color: ${props => props.theme.cardColor};\r\n  color: ${props => props.theme.textColor};\r\n  border: 1px solid ${props => props.theme.cardBorderColor};\r\n  margin-bottom: 10px;\r\n  border-radius: 15px;\r\n  a {\r\n    display: flex;\r\n    align-items: center;\r\n    transition: color 0.2s ease-in;\r\n    padding: 20px;\r\n  }\r\n  &:hover {\r\n    a {\r\n      color: ${props => props.theme.accentColor };\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color:${ props => props.theme.accentColor }\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 35px;\r\n  height: 35px;\r\n  margin-right: 10px;\r\n`;\r\ninterface CoinInterface {\r\n  id: string,\r\n  name: string,\r\n  symbol: string,\r\n  rank: number,\r\n  is_new: boolean,\r\n  is_active: boolean,\r\n  type: string,\r\n}\r\n\r\nfunction Coins() {\r\n  // const [coins, setCoins] = useState<CoinInterface[]>([]);\r\n  // const [loading, setLoading] = useState(true);\r\n\r\n  // useEffect(() => {\r\n  //   (async() => {\r\n  //     const response = await fetch('https://api.coinpaprika.com/v1/coins');\r\n  //     const json = await response.json();\r\n  //     setCoins(json.slice(0, 100));\r\n  //     setLoading(false);\r\n  //   })();\r\n  // }, []);\r\n  const { isLoading, data } = useQuery<CoinInterface[]>('allCoins', fetchCoins);\r\n  const setRootAtom = useSetRecoilState(isRootAtom);\r\n  setRootAtom(true);\r\n  return <Container>\r\n    <HelmetProvider>\r\n      <Helmet>\r\n        <title>Coins</title>\r\n      </Helmet>\r\n    </HelmetProvider>\r\n    <Header>\r\n      <Title>Coins</Title>\r\n    </Header>\r\n    {isLoading ? (\r\n      <Loader>...Loading</Loader>\r\n      ) : <CoinsList>\r\n        { data?.slice(0, 100).map(coin => \r\n          <Coin key={coin.id}>\r\n            <Link \r\n              to={{\r\n                pathname: `/${coin.id}`,\r\n                state: { name: coin.name },\r\n              }}\r\n            >\r\n              <Img \r\n                src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`} \r\n              />\r\n              {coin.name} &rarr;\r\n            </Link>\r\n          </Coin>\r\n      )}\r\n    </CoinsList>}\r\n  </Container>;\r\n}\r\n\r\nexport default Coins;","import styled from 'styled-components';\r\nimport { useSetRecoilState, useRecoilValue } from 'recoil';\r\nimport { isDarkAtom, isRootAtom } from '../atoms';\r\nimport { FaArrowLeft } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Header = styled.header`\r\n  width: 100%;\r\n  height: 60px;\r\n  background-color: ${props => props.theme.headerColor};\r\n  box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);\r\n  padding: 12px 30px;\r\n`;\r\n\r\nconst ThemeBtn = styled.button<{ isActive: Boolean, }>`\r\n  position: relative;\r\n  width: 120px;\r\n  height: 36px;\r\n  border-radius: 20px;\r\n  text-align: ${props => props.isActive ? 'left' : 'right'};\r\n  padding: 0 13px;\r\n  background-color: ${props => props.theme.headerBtnBg};\r\n  box-shadow: ${props => props.theme.headerBtnShadow};\r\n  color: ${props => props.theme.textColor};\r\n  border: 0;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  font-size: 13px;\r\n  float: right;\r\n\r\n  span {\r\n    position: absolute;\r\n    top: 5px;\r\n    right: 5px;\r\n    width: 26px;\r\n    height: 26px;\r\n    border-radius: 13px;\r\n    background-color: ${props => props.theme.headerBtnAccent};\r\n    box-shadow: 0 0 5px rgb(0 0 0 / 20%);\r\n    margin-right: ${props => props.isActive ? '0px' : '80px'};\r\n    transition: 0.3s margin-right;\r\n  }\r\n`;\r\n\r\nconst BackBtn = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 90px;\r\n  height: 36px;\r\n  border-radius: 20px;\r\n  font-size: 13px;\r\n  border: 0;\r\n  padding: 0 20px;\r\n  background-color: transparent;\r\n  color: ${props => props.theme.textColor};\r\n  border: 1px solid ${props => props.theme.textColor};\r\n  cursor: pointer;\r\n  float: left;\r\n\r\n  svg {\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n\r\nfunction GlobalHeader() {\r\n  const isDark = useRecoilValue(isDarkAtom);\r\n  const isRoot = useRecoilValue(isRootAtom);\r\n  const setDarkAtom = useSetRecoilState(isDarkAtom);\r\n  const toggleDarkAtom = () => setDarkAtom(prev => !prev);\r\n\r\n  return (\r\n    <Header>\r\n      { isRoot ? null : (\r\n        <Link to=\"/\">\r\n          <BackBtn>\r\n            <FaArrowLeft />\r\n            Back\r\n          </BackBtn>\r\n        </Link>\r\n      )}\r\n      <ThemeBtn onClick={toggleDarkAtom} isActive={isDark}>\r\n        {isDark ? 'Dark mode' : 'Light mode'}\r\n        <span></span>\r\n      </ThemeBtn>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default GlobalHeader;","import { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Coin from './routes/Coin';\r\nimport Coins from './routes/Coins';\r\nimport GlobalHeader from './components/GlobalHeader';\r\n\r\nfunction Router() {\r\n  return <BrowserRouter>\r\n    <GlobalHeader />\r\n    <Switch>\r\n      <Route path=\"/playground\">\r\n        <Coins />\r\n      </Route>\r\n      <Route path=\"/playground/:coinId\">\r\n        <Coin />\r\n      </Route>\r\n    </Switch>\r\n  </BrowserRouter>\r\n}\r\nexport default Router;","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const darkTheme:DefaultTheme = {\r\n  bgColor: '#2f3640',\r\n  textColor: 'whitesmoke',\r\n  accentColor: '#00a8ff',\r\n  cardColor: '#2f3640',\r\n  cardBorderColor: 'whitesmoke',\r\n  headerColor: '#293039',\r\n  headerBtnBg: 'rgba(0, 0, 0, 0.1)',\r\n  headerBtnAccent: 'rgba(255, 255, 255, 0.1)',\r\n  headerBtnShadow: 'inset 0 0 10px rgba(0,0,0,0.3)',\r\n}\r\n\r\nexport const lightTheme:DefaultTheme = {\r\n  bgColor: 'whitesmoke',\r\n  textColor: 'black',\r\n  accentColor: '#00a8ff',\r\n  cardColor: 'white',\r\n  cardBorderColor: 'transparent',\r\n  headerColor: '#fff',\r\n  headerBtnBg: 'rgba(0, 0, 0, 0.02)',\r\n  headerBtnAccent: '#fff',\r\n  headerBtnShadow: 'inset 0 0 10px rgba(0,0,0,0.12)',\r\n}","import { createGlobalStyle } from 'styled-components';\nimport Router from './Router';\nimport { ReactQueryDevtools } from 'react-query/devtools';\n\nimport { ThemeProvider } from 'styled-components';\nimport { darkTheme, lightTheme } from './theme';\nimport { useRecoilValue } from 'recoil';\nimport { isDarkAtom } from './atoms';\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\n\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, menu, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed,\n  figure, figcaption, footer, header, hgroup,\n  main, menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure,\n  footer, header, hgroup, main, menu, nav, section {\n    display: block;\n  }\n  /* HTML5 hidden-attribute fix for newer browsers */\n  *[hidden] {\n      display: none;\n  }\n  body {\n    line-height: 1;\n  }\n  menu, ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    font-family: 'Source Sans Pro', sans-serif;\n    background-color: ${props => props.theme.bgColor};\n    color: ${props => props.theme.textColor};\n  }\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n`;\n\nfunction App() {\n  const isDark = useRecoilValue(isDarkAtom);\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <GlobalStyle />\n        <Router />\n        <ReactQueryDevtools initialIsOpen={true} />\n      </ThemeProvider>  \n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { RecoilRoot } from 'recoil';\n\nconst queryClient = new QueryClient()\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}